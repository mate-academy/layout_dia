/*#region Media Query*/
@mixin onTablet {
  @media (min-width: $tablet-min-width) {
    @content;
  }
}

@mixin onDesktopSmall {
  @media (min-width: $desktopSmall-min-width) {
    @content;
  }
}

@mixin onDesktop {
  @media (min-width: $desktop-min-width) {
    @content;
  }
}

@mixin onScreen {
  @media (min-width: $screen-min-width) {
    @content;
  }
}

@mixin onScreenLarge {
  @media (min-width: $screenLarge-min-width) {
    @content;
  }
}
/*#endregion*/

/*#region Page Base Grid*/
@mixin pageGrid {
  --columns: 2;
  display: grid;
  grid-template-columns: repeat(var(--columns), 1fr);
  column-gap: 20px;

  @include onTablet {
    --columns: 6;
    column-gap: 30px;
  }

  @include onDesktopSmall {
    --columns: 12;
    column-gap: 20px;
  }

  @include onDesktop {
    column-gap: 30px;
  }
}
/*#endregion*/

@mixin hover($property: all, $toValue: none, $inTime: $effectDurationNormal) {
  transition: #{$property} #{$inTime};

  &:hover {
    #{$property}: #{$toValue};
  }
}

@mixin active($property: all, $toValue: none, $inTime: $effectDurationNormal) {
  transition: #{$property} #{$inTime};

  &:hover {
    #{$property}: #{$toValue};
  }
}

@mixin target($property: all, $toValue: none, $inTime: $effectDurationNormal) {
  transition: #{$property} #{$inTime};

  &:target {
    #{$property}: #{$toValue};
  }
}
